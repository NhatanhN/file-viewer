/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.0.0/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.5.5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    
    implementation 'org.springframework.boot:spring-boot:3.5.5'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.5.5'
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:3.5.5"
    runtimeOnly 'com.mysql:mysql-connector-j:8.4.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.13.0'
    implementation 'org.mindrot:jbcrypt:0.4'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = "net.nhatanhn.App"
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}